from flask import Falsk
from datetime import datetime
from werkzeug.security import generate_password_hash,check_password_hash
from flask_sqlalchemy import SQLAlchemy
from flask_login import LoginManager
from flask_login import UserMixin
from flask_login import login_required



app=Flask(__name__)
login_manager=LoginManager(app)
login_manager.login_view='login'


@login_manager.user_loader
def load_user(user_id):
    return db.session.query(User).get(user_id)

class User(db.Model,UserMixin):
   __tablename__=='users'
   id=db.Column(db.Integer,primary_key=True,autoincrement=True)
   name=db.Column(db.String(100))
   username=db.Column(db.String(100),nullable=False,unique=True)
   email=db.Column(db.String(100),nullable=False,unique=True)
   password_hash=db.Column(db.String(100),nullable=False)
   created_on=db.Column(db.DateTime(),default=datetime.utcnow())
   updated_on=db.Column(db.DateTime(),default=datetime.utcnow(),onupdate=datetime.utcnow())
   
   def __repr__(self):
       return f"{self.id} and {self.username}"

   def set_password(self,password):
       self.password_hash=generate_password_hash(password)
   def check_password(self,password):
       return check_password_hash(self.password_hash,password):


@app.route('/admin/')
@login_required
def main():
   return render_template("admin.html")

@app.route('/login/',methods=['post','get'])
def login():
  message=''
  if request.method=='POST':
     username=request.form.get('username')
     password=request.form.get('password')
     if username=='root' and password=='pass':
        message='Correct username and password'
     else:
        message='Wrong username and password'
  return render_template('login.html',message=message)


if __name__=="__main__":
   app.run(debug=True)


          
